{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Qrvc3RnFZgjre3ZnRblo1EorTvLgQoTv","timestamp":1729744929356},{"file_id":"1-2ry5-FOwE3PBejU0ZnL50I4pITmSAdy","timestamp":1729743598628}],"mount_file_id":"14Vcp5wRCdtkuY-1OT6lJxXxshr6-u7eO","authorship_tag":"ABX9TyMuLyV/BQhWK+Wvz80bWq1G"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"rggSwquPSJIn","executionInfo":{"status":"ok","timestamp":1729745114025,"user_tz":-480,"elapsed":2747,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"a7dd8f09-dd4f-44a1-a14e-4b6edaf3c283"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Gene_symbol                        NAME  Foldchange    PValue       FDR  \\\n","0  0610007P14Rik  RIKEN cDNA 0610007P14 gene    1.096333  0.237007  0.999902   \n","1  0610009B22Rik  RIKEN cDNA 0610009B22 gene   -1.025547  0.740390  0.999902   \n","2  0610009L18Rik  RIKEN cDNA 0610009L18 gene   -1.021398  0.916932  0.999902   \n","3  0610009O20Rik  RIKEN cDNA 0610009O20 gene   -1.050696  0.427450  0.999902   \n","4  0610010B08Rik  RIKEN cDNA 0610010B08 gene   -1.221902  0.116814  0.999902   \n","\n","       1posH      2posH      3posH      4posH      5posH      6posH  \\\n","0  24.061225  22.944972  21.897173  19.840338  27.577471  21.312612   \n","1  12.942468  10.845574  11.913660  10.309783  12.922427  11.597676   \n","2   0.823612   0.564221   0.998351   1.258753   1.949193   0.979025   \n","3  40.533458  38.993914  36.273433  38.062279  34.941088  35.621433   \n","4  12.530663  28.211031  19.301460  31.229051  29.021317  24.475614   \n","\n","       1negH      2negH      3negH      4negH      5negH      6negH  \n","0  21.029999  24.146191  19.102242  20.951491  20.477456  19.736071  \n","1  12.474068  12.291472  12.133346  11.639717  11.900859  11.783808  \n","2   1.199430   1.310258   0.746667   0.440422   1.329705   1.662746  \n","3  39.461234  40.368439  39.946707  39.889625  39.292780  36.941877  \n","4  32.744429  43.612888  31.111143  22.398591  22.073102  24.796602  "],"text/html":["\n","  <div id=\"df-665496d9-c12d-421d-862f-e5cebc9cc9c3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gene_symbol</th>\n","      <th>NAME</th>\n","      <th>Foldchange</th>\n","      <th>PValue</th>\n","      <th>FDR</th>\n","      <th>1posH</th>\n","      <th>2posH</th>\n","      <th>3posH</th>\n","      <th>4posH</th>\n","      <th>5posH</th>\n","      <th>6posH</th>\n","      <th>1negH</th>\n","      <th>2negH</th>\n","      <th>3negH</th>\n","      <th>4negH</th>\n","      <th>5negH</th>\n","      <th>6negH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0610007P14Rik</td>\n","      <td>RIKEN cDNA 0610007P14 gene</td>\n","      <td>1.096333</td>\n","      <td>0.237007</td>\n","      <td>0.999902</td>\n","      <td>24.061225</td>\n","      <td>22.944972</td>\n","      <td>21.897173</td>\n","      <td>19.840338</td>\n","      <td>27.577471</td>\n","      <td>21.312612</td>\n","      <td>21.029999</td>\n","      <td>24.146191</td>\n","      <td>19.102242</td>\n","      <td>20.951491</td>\n","      <td>20.477456</td>\n","      <td>19.736071</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0610009B22Rik</td>\n","      <td>RIKEN cDNA 0610009B22 gene</td>\n","      <td>-1.025547</td>\n","      <td>0.740390</td>\n","      <td>0.999902</td>\n","      <td>12.942468</td>\n","      <td>10.845574</td>\n","      <td>11.913660</td>\n","      <td>10.309783</td>\n","      <td>12.922427</td>\n","      <td>11.597676</td>\n","      <td>12.474068</td>\n","      <td>12.291472</td>\n","      <td>12.133346</td>\n","      <td>11.639717</td>\n","      <td>11.900859</td>\n","      <td>11.783808</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0610009L18Rik</td>\n","      <td>RIKEN cDNA 0610009L18 gene</td>\n","      <td>-1.021398</td>\n","      <td>0.916932</td>\n","      <td>0.999902</td>\n","      <td>0.823612</td>\n","      <td>0.564221</td>\n","      <td>0.998351</td>\n","      <td>1.258753</td>\n","      <td>1.949193</td>\n","      <td>0.979025</td>\n","      <td>1.199430</td>\n","      <td>1.310258</td>\n","      <td>0.746667</td>\n","      <td>0.440422</td>\n","      <td>1.329705</td>\n","      <td>1.662746</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0610009O20Rik</td>\n","      <td>RIKEN cDNA 0610009O20 gene</td>\n","      <td>-1.050696</td>\n","      <td>0.427450</td>\n","      <td>0.999902</td>\n","      <td>40.533458</td>\n","      <td>38.993914</td>\n","      <td>36.273433</td>\n","      <td>38.062279</td>\n","      <td>34.941088</td>\n","      <td>35.621433</td>\n","      <td>39.461234</td>\n","      <td>40.368439</td>\n","      <td>39.946707</td>\n","      <td>39.889625</td>\n","      <td>39.292780</td>\n","      <td>36.941877</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0610010B08Rik</td>\n","      <td>RIKEN cDNA 0610010B08 gene</td>\n","      <td>-1.221902</td>\n","      <td>0.116814</td>\n","      <td>0.999902</td>\n","      <td>12.530663</td>\n","      <td>28.211031</td>\n","      <td>19.301460</td>\n","      <td>31.229051</td>\n","      <td>29.021317</td>\n","      <td>24.475614</td>\n","      <td>32.744429</td>\n","      <td>43.612888</td>\n","      <td>31.111143</td>\n","      <td>22.398591</td>\n","      <td>22.073102</td>\n","      <td>24.796602</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-665496d9-c12d-421d-862f-e5cebc9cc9c3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-665496d9-c12d-421d-862f-e5cebc9cc9c3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-665496d9-c12d-421d-862f-e5cebc9cc9c3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3c5db8c4-597d-4cda-b1f4-127f74d8a8d4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3c5db8c4-597d-4cda-b1f4-127f74d8a8d4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3c5db8c4-597d-4cda-b1f4-127f74d8a8d4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 14673,\n  \"fields\": [\n    {\n      \"column\": \"Gene_symbol\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14673,\n        \"samples\": [\n          \"Gm16973\",\n          \"Atf7ip\",\n          \"Tmem108\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NAME\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14468,\n        \"samples\": [\n          \"solute carrier family 9 (sodium/hydrogen exchanger); member 1\",\n          \"TSC22 domain family; member 1\",\n          \"zinc finger protein 456\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Foldchange\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0907842402356065,\n        \"min\": -3.36017107485283,\n        \"max\": 15.8817763943658,\n        \"num_unique_values\": 14673,\n        \"samples\": [\n          -1.06285176324194,\n          -1.01490995523472,\n          -1.07199724801355\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PValue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.254403436496577,\n        \"min\": 5.76442201121674e-05,\n        \"max\": 0.999902145391918,\n        \"num_unique_values\": 14673,\n        \"samples\": [\n          0.599509191089402,\n          0.899545959353624,\n          0.494247635795288\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FDR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0057080769659918875,\n        \"min\": 0.527631350673426,\n        \"max\": 0.999902145391918,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.527631350673426,\n          0.821021870510087,\n          0.999902145391918\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"1posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 183.91203381128406,\n        \"min\": 0.0,\n        \"max\": 7711.94630615385,\n        \"num_unique_values\": 3443,\n        \"samples\": [\n          34.0622237490509,\n          55.5937848753939,\n          23.472931391833\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176.2009757777657,\n        \"min\": 0.0,\n        \"max\": 7045.92447987485,\n        \"num_unique_values\": 3337,\n        \"samples\": [\n          30.0917666925281,\n          175.597996887023,\n          88.3318734786919\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 170.00331561624068,\n        \"min\": 0.0,\n        \"max\": 6303.7902045965,\n        \"num_unique_values\": 3235,\n        \"samples\": [\n          264.296885353148,\n          122.86377495893,\n          127.855531796373\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"4posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.16448536027212,\n        \"min\": 0.0,\n        \"max\": 6823.75750773206,\n        \"num_unique_values\": 3424,\n        \"samples\": [\n          220.82116142096,\n          31.9483385009152,\n          30.3898829642852\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 190.11824925951706,\n        \"min\": 0.0,\n        \"max\": 11700.9330752438,\n        \"num_unique_values\": 2988,\n        \"samples\": [\n          3605.42941537404,\n          125.037118005443,\n          746.107745142179\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"6posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191.0894706402726,\n        \"min\": 0.0,\n        \"max\": 7921.43845323588,\n        \"num_unique_values\": 3058,\n        \"samples\": [\n          114.470565659728,\n          3.01238330683496,\n          314.191578902886\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"1negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 184.25455266135054,\n        \"min\": 0.0,\n        \"max\": 6517.10083873827,\n        \"num_unique_values\": 4253,\n        \"samples\": [\n          3.79819379577397,\n          263.194839553474,\n          124.380851564766\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 178.73530537832124,\n        \"min\": 0.0,\n        \"max\": 7383.4935576013,\n        \"num_unique_values\": 3333,\n        \"samples\": [\n          28.5137196490037,\n          389.146760286293,\n          28.8256859471328\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 179.99596606259297,\n        \"min\": 0.0,\n        \"max\": 6251.53520118277,\n        \"num_unique_values\": 3408,\n        \"samples\": [\n          1.4933348411819,\n          105.466773158472,\n          382.169274772468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"4negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 185.05873651001278,\n        \"min\": 0.0,\n        \"max\": 6529.88128998685,\n        \"num_unique_values\": 3374,\n        \"samples\": [\n          153.329678698251,\n          70.5933112431011,\n          79.4646631907636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 188.20214857201827,\n        \"min\": 0.0,\n        \"max\": 7427.99759394779,\n        \"num_unique_values\": 3280,\n        \"samples\": [\n          360.28354661132,\n          228.709245311485,\n          198.857369978678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"6negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 184.72089215597018,\n        \"min\": 0.0,\n        \"max\": 8920.70421288998,\n        \"num_unique_values\": 3068,\n        \"samples\": [\n          835.638270258317,\n          40.2673688497173,\n          150.586946703701\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","data=pd.read_csv('/content/drive/MyDrive/transcriptomics-data/detectable_genes.csv')\n","\n","data.head()"]},{"cell_type":"code","source":["numeric_columns = data.drop(columns=['Gene_symbol', 'NAME'])\n","\n","sns.kdeplot(data['1posH'], shade=True)\n","plt.title('KDE Plot of column_name')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":576},"id":"x2rkK2zkU2QK","executionInfo":{"status":"ok","timestamp":1729686448198,"user_tz":-480,"elapsed":746,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"c83d056d-ac65-403a-ceb6-3ab0ce10ea29"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-b83de77c58d7>:3: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(data['1posH'], shade=True)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","label_e=LabelEncoder()\n","data['Gene_symbol']=label_e.fit_transform(data['Gene_symbol'])\n","data['NAME']=label_e.fit_transform(data['NAME'])"],"metadata":{"id":"7VQZayWaT9iZ","executionInfo":{"status":"ok","timestamp":1729745120553,"user_tz":-480,"elapsed":691,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df_numerical_features = data.select_dtypes(exclude='object')\n","df_categorical_features = data.select_dtypes(include='object')\n","\n","num_cols = list(df_numerical_features)\n","cat_cols = list(df_categorical_features)"],"metadata":{"id":"B8ZOOgsJTpya","executionInfo":{"status":"ok","timestamp":1729745122496,"user_tz":-480,"elapsed":532,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["!pip install ydata-synthetic==1.1.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ns4xW40CUN4a","executionInfo":{"status":"ok","timestamp":1729745127251,"user_tz":-480,"elapsed":3774,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"8ed82f58-d4bc-4bc1-ba44-1db15c87dc48"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: ydata-synthetic==1.1.0 in /usr/local/lib/python3.10/dist-packages (1.1.0)\n","Requirement already satisfied: requests<2.29,>=2.24.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (2.28.2)\n","Requirement already satisfied: pandas==1.5.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.5.3)\n","Requirement already satisfied: numpy==1.23.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.23.5)\n","Requirement already satisfied: scikit-learn==1.2.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.2.2)\n","Requirement already satisfied: matplotlib==3.6.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (3.6.3)\n","Requirement already satisfied: tensorflow==2.11.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (2.11.0)\n","Requirement already satisfied: tensorflow-probability==0.19.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (0.19.0)\n","Requirement already satisfied: easydict==1.10 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.10)\n","Requirement already satisfied: pmlb==1.0.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.0.1.post3)\n","Requirement already satisfied: tqdm<5.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (4.66.5)\n","Requirement already satisfied: typeguard==2.13.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (2.13.3)\n","Requirement already satisfied: pytest==6.2.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (6.2.5)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (1.3.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (4.54.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (1.4.7)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (24.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (10.4.0)\n","Requirement already satisfied: pyparsing>=2.2.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (3.2.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas==1.5.*->ydata-synthetic==1.1.0) (2024.2)\n","Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.10/dist-packages (from pmlb==1.0.*->ydata-synthetic==1.1.0) (6.0.2)\n","Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (24.2.0)\n","Requirement already satisfied: iniconfig in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (2.0.0)\n","Requirement already satisfied: pluggy<2.0,>=0.12 in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (1.5.0)\n","Requirement already satisfied: py>=1.8.2 in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (1.11.0)\n","Requirement already satisfied: toml in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (0.10.2)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.*->ydata-synthetic==1.1.0) (1.13.1)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.*->ydata-synthetic==1.1.0) (1.4.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.*->ydata-synthetic==1.1.0) (3.5.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.6.3)\n","Requirement already satisfied: flatbuffers>=2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (24.3.25)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.4.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.64.1)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.11.0)\n","Requirement already satisfied: keras<2.12,>=2.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.11.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (18.1.1)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.4.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.19.6)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (75.1.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.16.0)\n","Requirement already satisfied: tensorboard<2.12,>=2.11 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.11.2)\n","Requirement already satisfied: tensorflow-estimator<2.12,>=2.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.11.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.5.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (4.12.2)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.16.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.37.1)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from tensorflow-probability==0.19.0->ydata-synthetic==1.1.0) (4.4.2)\n","Requirement already satisfied: cloudpickle>=1.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow-probability==0.19.0->ydata-synthetic==1.1.0) (3.1.0)\n","Requirement already satisfied: dm-tree in /usr/local/lib/python3.10/dist-packages (from tensorflow-probability==0.19.0->ydata-synthetic==1.1.0) (0.1.8)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (3.10)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (1.26.20)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (2024.8.30)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.44.0)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.27.0)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.4.6)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.7)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.6.1)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.8.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.0.4)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (5.5.0)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.4.1)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.3.1)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.0.2)\n","Requirement already satisfied: pyasn1<0.7.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.6.1)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.2.2)\n"]}]},{"cell_type":"code","source":["from ydata_synthetic.synthesizers.regular import RegularSynthesizer\n","from ydata_synthetic.synthesizers.regular import RegularSynthesizer\n","from ydata_synthetic.synthesizers import ModelParameters, TrainParameters\n","#Defining the training parameters\n","noise_dim = 128\n","dim = 128\n","batch_size = 500\n","\n","log_step = 100\n","epochs = 100\n","learning_rate = [5e-4, 3e-3]\n","beta_1 = 0.5\n","beta_2 = 0.9\n","models_dir = '../cache'\n","\n","gan_args = ModelParameters(batch_size=batch_size,\n","                           lr=learning_rate,\n","                           betas=(beta_1, beta_2),\n","                           noise_dim=noise_dim,\n","                           layers_dim=dim)\n","\n","train_args = TrainParameters(epochs=epochs,\n","                             sample_interval=log_step)\n","\n","synth = RegularSynthesizer(modelname='dragan', model_parameters=gan_args, n_discriminator=2)\n","synth.fit(data, train_args, num_cols, cat_cols)\n","\n","synth.save('dragan-trans.pkl')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZI2QeB4XGiV","executionInfo":{"status":"ok","timestamp":1729746055223,"user_tz":-480,"elapsed":896383,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"bb66f7af-11a3-4594-b4ff-e7a021b58403"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n","  warnings.warn(\n","  1%|          | 1/100 [00:11<18:38, 11.30s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 0 | disc_loss: 0.499584823846817 | gen_loss: -1.0\n"]},{"output_type":"stream","name":"stderr","text":["\r  2%|▏         | 2/100 [00:21<17:25, 10.67s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 1 | disc_loss: 2.503105640411377 | gen_loss: -1.0\n"]},{"output_type":"stream","name":"stderr","text":["\r  3%|▎         | 3/100 [00:31<16:55, 10.47s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 2 | disc_loss: 1.0542106628417969 | gen_loss: -1.0\n"]},{"output_type":"stream","name":"stderr","text":["\r  4%|▍         | 4/100 [00:41<16:35, 10.37s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 3 | disc_loss: 0.5302153825759888 | gen_loss: -1.0\n"]},{"output_type":"stream","name":"stderr","text":["\r  5%|▌         | 5/100 [00:49<14:42,  9.29s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 4 | disc_loss: -0.1748335361480713 | gen_loss: -0.07383740693330765\n"]},{"output_type":"stream","name":"stderr","text":["\r  6%|▌         | 6/100 [00:57<13:59,  8.93s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 5 | disc_loss: -0.32752835750579834 | gen_loss: -0.23776285350322723\n"]},{"output_type":"stream","name":"stderr","text":["\r  7%|▋         | 7/100 [01:04<12:57,  8.35s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 6 | disc_loss: -0.6658616662025452 | gen_loss: -0.017629271373152733\n"]},{"output_type":"stream","name":"stderr","text":["\r  8%|▊         | 8/100 [01:14<13:43,  8.95s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 7 | disc_loss: -0.29732751846313477 | gen_loss: -2.302365381678939e-10\n"]},{"output_type":"stream","name":"stderr","text":["\r  9%|▉         | 9/100 [01:23<13:21,  8.81s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 8 | disc_loss: -0.49635595083236694 | gen_loss: -1.947470240626359e-10\n"]},{"output_type":"stream","name":"stderr","text":["\r 10%|█         | 10/100 [01:30<12:19,  8.22s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 9 | disc_loss: -0.5875239372253418 | gen_loss: -8.590799919312372e-14\n"]},{"output_type":"stream","name":"stderr","text":["\r 11%|█         | 11/100 [01:38<12:07,  8.18s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 10 | disc_loss: -0.7916984558105469 | gen_loss: -0.0019910428673028946\n"]},{"output_type":"stream","name":"stderr","text":["\r 12%|█▏        | 12/100 [01:48<12:54,  8.80s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 11 | disc_loss: -0.6629081964492798 | gen_loss: -4.880838559984113e-07\n"]},{"output_type":"stream","name":"stderr","text":["\r 13%|█▎        | 13/100 [01:58<13:23,  9.23s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 12 | disc_loss: -0.7585468888282776 | gen_loss: -3.0888200330814186e-10\n"]},{"output_type":"stream","name":"stderr","text":["\r 14%|█▍        | 14/100 [02:09<13:39,  9.53s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 13 | disc_loss: -0.6944277882575989 | gen_loss: -6.956262649238099e-11\n"]},{"output_type":"stream","name":"stderr","text":["\r 15%|█▌        | 15/100 [02:16<12:44,  8.99s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 14 | disc_loss: -0.8233815431594849 | gen_loss: -4.050633717334051e-10\n"]},{"output_type":"stream","name":"stderr","text":["\r 16%|█▌        | 16/100 [02:24<12:08,  8.67s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 15 | disc_loss: -0.6911166906356812 | gen_loss: -2.9378898691244158e-21\n"]},{"output_type":"stream","name":"stderr","text":["\r 17%|█▋        | 17/100 [02:31<11:16,  8.15s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 16 | disc_loss: -0.7765271663665771 | gen_loss: -2.434815370155885e-12\n"]},{"output_type":"stream","name":"stderr","text":["\r 18%|█▊        | 18/100 [02:41<11:59,  8.77s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 17 | disc_loss: -0.8288943767547607 | gen_loss: -1.118844972995258e-15\n"]},{"output_type":"stream","name":"stderr","text":["\r 19%|█▉        | 19/100 [02:49<11:29,  8.51s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 18 | disc_loss: -0.8165490031242371 | gen_loss: -1.0620370005653967e-07\n"]},{"output_type":"stream","name":"stderr","text":["\r 20%|██        | 20/100 [02:56<10:45,  8.06s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 19 | disc_loss: -0.8550781607627869 | gen_loss: -1.1249798035350977e-06\n"]},{"output_type":"stream","name":"stderr","text":["\r 21%|██        | 21/100 [03:07<11:28,  8.71s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 20 | disc_loss: -0.8165661096572876 | gen_loss: -4.624604085096129e-12\n"]},{"output_type":"stream","name":"stderr","text":["\r 22%|██▏       | 22/100 [03:14<10:49,  8.33s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 21 | disc_loss: -0.7102882862091064 | gen_loss: -0.05079655721783638\n"]},{"output_type":"stream","name":"stderr","text":["\r 23%|██▎       | 23/100 [03:22<10:22,  8.08s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 22 | disc_loss: -0.8007680177688599 | gen_loss: -1.061155001560756e-16\n"]},{"output_type":"stream","name":"stderr","text":["\r 24%|██▍       | 24/100 [03:32<11:03,  8.73s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 23 | disc_loss: -0.8704284429550171 | gen_loss: -6.062937833671407e-21\n"]},{"output_type":"stream","name":"stderr","text":["\r 25%|██▌       | 25/100 [03:42<11:37,  9.30s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 24 | disc_loss: -0.8498826026916504 | gen_loss: -4.983444759183383e-16\n"]},{"output_type":"stream","name":"stderr","text":["\r 26%|██▌       | 26/100 [03:50<10:42,  8.68s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 25 | disc_loss: -0.8142284750938416 | gen_loss: -8.922982556066721e-17\n"]},{"output_type":"stream","name":"stderr","text":["\r 27%|██▋       | 27/100 [03:58<10:25,  8.57s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 26 | disc_loss: -0.7486176490783691 | gen_loss: -2.5085088086601592e-12\n"]},{"output_type":"stream","name":"stderr","text":["\r 28%|██▊       | 28/100 [04:08<10:52,  9.07s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 27 | disc_loss: -0.7640173435211182 | gen_loss: -8.755706223782555e-25\n"]},{"output_type":"stream","name":"stderr","text":["\r 29%|██▉       | 29/100 [04:15<10:05,  8.53s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 28 | disc_loss: -0.857247531414032 | gen_loss: -2.6757017622003332e-05\n"]},{"output_type":"stream","name":"stderr","text":["\r 30%|███       | 30/100 [04:26<10:32,  9.04s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 29 | disc_loss: -0.8779429197311401 | gen_loss: -2.564119536704193e-19\n"]},{"output_type":"stream","name":"stderr","text":["\r 31%|███       | 31/100 [04:34<10:12,  8.87s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 30 | disc_loss: -0.7631306052207947 | gen_loss: -2.1230436977664677e-14\n"]},{"output_type":"stream","name":"stderr","text":["\r 32%|███▏      | 32/100 [04:41<09:31,  8.40s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 31 | disc_loss: -0.82097327709198 | gen_loss: -3.241305890355761e-08\n"]},{"output_type":"stream","name":"stderr","text":["\r 33%|███▎      | 33/100 [04:50<09:23,  8.42s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 32 | disc_loss: -0.8287450671195984 | gen_loss: -4.2332833066890604e-14\n"]},{"output_type":"stream","name":"stderr","text":["\r 34%|███▍      | 34/100 [05:00<09:51,  8.96s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 33 | disc_loss: -0.842025101184845 | gen_loss: -1.3618237915125064e-07\n"]},{"output_type":"stream","name":"stderr","text":["\r 35%|███▌      | 35/100 [05:08<09:11,  8.49s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 34 | disc_loss: -0.8380904197692871 | gen_loss: -3.8134703728154307e-11\n"]},{"output_type":"stream","name":"stderr","text":["\r 36%|███▌      | 36/100 [05:18<09:36,  9.01s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 35 | disc_loss: -0.7949238419532776 | gen_loss: -2.5020165494993307e-08\n"]},{"output_type":"stream","name":"stderr","text":["\r 37%|███▋      | 37/100 [05:26<09:15,  8.82s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 36 | disc_loss: -0.7901607751846313 | gen_loss: -4.9766909796744585e-05\n"]},{"output_type":"stream","name":"stderr","text":["\r 38%|███▊      | 38/100 [05:33<08:39,  8.39s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 37 | disc_loss: 0.09905970096588135 | gen_loss: -0.017675476148724556\n"]},{"output_type":"stream","name":"stderr","text":["\r 39%|███▉      | 39/100 [05:42<08:32,  8.40s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 38 | disc_loss: 7.532538414001465 | gen_loss: -0.032665081322193146\n"]},{"output_type":"stream","name":"stderr","text":["\r 40%|████      | 40/100 [05:52<08:56,  8.95s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 39 | disc_loss: 0.4670860767364502 | gen_loss: -0.28804388642311096\n"]},{"output_type":"stream","name":"stderr","text":["\r 41%|████      | 41/100 [06:02<09:10,  9.33s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 40 | disc_loss: 0.2624630928039551 | gen_loss: -0.2917048931121826\n"]},{"output_type":"stream","name":"stderr","text":["\r 42%|████▏     | 42/100 [06:10<08:29,  8.78s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 41 | disc_loss: 0.9341619610786438 | gen_loss: -0.6533409953117371\n"]},{"output_type":"stream","name":"stderr","text":["\r 43%|████▎     | 43/100 [06:18<08:13,  8.66s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 42 | disc_loss: 0.5745612382888794 | gen_loss: -0.8446471095085144\n"]},{"output_type":"stream","name":"stderr","text":["\r 44%|████▍     | 44/100 [06:28<08:31,  9.13s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 43 | disc_loss: 0.5793759822845459 | gen_loss: -0.3502586781978607\n"]},{"output_type":"stream","name":"stderr","text":["\r 45%|████▌     | 45/100 [06:36<07:53,  8.61s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 44 | disc_loss: 3.4943313598632812 | gen_loss: -0.5053857564926147\n"]},{"output_type":"stream","name":"stderr","text":["\r 46%|████▌     | 46/100 [06:46<08:11,  9.10s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 45 | disc_loss: 0.6284786462783813 | gen_loss: -0.08223611861467361\n"]},{"output_type":"stream","name":"stderr","text":["\r 47%|████▋     | 47/100 [06:56<08:20,  9.44s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 46 | disc_loss: 0.7324790954589844 | gen_loss: -0.13152804970741272\n"]},{"output_type":"stream","name":"stderr","text":["\r 48%|████▊     | 48/100 [07:04<07:43,  8.92s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 47 | disc_loss: 0.30599403381347656 | gen_loss: -0.22725141048431396\n"]},{"output_type":"stream","name":"stderr","text":["\r 49%|████▉     | 49/100 [07:12<07:18,  8.60s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 48 | disc_loss: 0.44323214888572693 | gen_loss: -0.37667229771614075\n"]},{"output_type":"stream","name":"stderr","text":["\r 50%|█████     | 50/100 [07:22<07:34,  9.09s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 49 | disc_loss: 0.5435068607330322 | gen_loss: -0.2991589605808258\n"]},{"output_type":"stream","name":"stderr","text":["\r 51%|█████     | 51/100 [07:32<07:41,  9.43s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 50 | disc_loss: 0.09965550899505615 | gen_loss: -0.49329856038093567\n"]},{"output_type":"stream","name":"stderr","text":["\r 52%|█████▏    | 52/100 [07:43<07:44,  9.67s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 51 | disc_loss: 0.7387924194335938 | gen_loss: -0.2632960379123688\n"]},{"output_type":"stream","name":"stderr","text":["\r 53%|█████▎    | 53/100 [07:53<07:42,  9.83s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 52 | disc_loss: 1.0786772966384888 | gen_loss: -0.31015369296073914\n"]},{"output_type":"stream","name":"stderr","text":["\r 54%|█████▍    | 54/100 [08:03<07:37,  9.95s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 53 | disc_loss: 1.12583327293396 | gen_loss: -0.3528432846069336\n"]},{"output_type":"stream","name":"stderr","text":["\r 55%|█████▌    | 55/100 [08:13<07:31, 10.03s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 54 | disc_loss: 0.36648422479629517 | gen_loss: -0.2986038029193878\n"]},{"output_type":"stream","name":"stderr","text":["\r 56%|█████▌    | 56/100 [08:23<07:24, 10.09s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 55 | disc_loss: 1.0940043926239014 | gen_loss: -0.828986644744873\n"]},{"output_type":"stream","name":"stderr","text":["\r 57%|█████▋    | 57/100 [08:31<06:37,  9.25s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 56 | disc_loss: -0.17537277936935425 | gen_loss: -0.16895341873168945\n"]},{"output_type":"stream","name":"stderr","text":["\r 58%|█████▊    | 58/100 [08:39<06:17,  9.00s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 57 | disc_loss: 2.300413131713867 | gen_loss: -0.7097646594047546\n"]},{"output_type":"stream","name":"stderr","text":["\r 59%|█████▉    | 59/100 [08:49<06:23,  9.37s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 58 | disc_loss: 0.0129050612449646 | gen_loss: -0.4804403781890869\n"]},{"output_type":"stream","name":"stderr","text":["\r 60%|██████    | 60/100 [09:00<06:24,  9.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 59 | disc_loss: -0.05932994186878204 | gen_loss: -0.2643581032752991\n"]},{"output_type":"stream","name":"stderr","text":["\r 61%|██████    | 61/100 [09:07<05:48,  8.93s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 60 | disc_loss: 0.3713061213493347 | gen_loss: -0.30885040760040283\n"]},{"output_type":"stream","name":"stderr","text":["\r 62%|██████▏   | 62/100 [09:15<05:33,  8.77s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 61 | disc_loss: -0.13036511838436127 | gen_loss: -0.22235937416553497\n"]},{"output_type":"stream","name":"stderr","text":["\r 63%|██████▎   | 63/100 [09:26<05:40,  9.20s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 62 | disc_loss: 0.25598403811454773 | gen_loss: -0.5983787178993225\n"]},{"output_type":"stream","name":"stderr","text":["\r 64%|██████▍   | 64/100 [09:33<05:11,  8.65s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 63 | disc_loss: 0.5852988362312317 | gen_loss: -0.566239595413208\n"]},{"output_type":"stream","name":"stderr","text":["\r 65%|██████▌   | 65/100 [09:41<04:59,  8.57s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 64 | disc_loss: 0.2938764691352844 | gen_loss: -0.6428496837615967\n"]},{"output_type":"stream","name":"stderr","text":["\r 66%|██████▌   | 66/100 [09:49<04:47,  8.46s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 65 | disc_loss: 0.2734883725643158 | gen_loss: -0.7727256417274475\n"]},{"output_type":"stream","name":"stderr","text":["\r 67%|██████▋   | 67/100 [09:57<04:27,  8.12s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 66 | disc_loss: 0.2896418571472168 | gen_loss: -0.6131037473678589\n"]},{"output_type":"stream","name":"stderr","text":["\r 68%|██████▊   | 68/100 [10:05<04:22,  8.21s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 67 | disc_loss: 0.37793007493019104 | gen_loss: -0.5837851166725159\n"]},{"output_type":"stream","name":"stderr","text":["\r 69%|██████▉   | 69/100 [10:15<04:33,  8.82s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 68 | disc_loss: 0.46386855840682983 | gen_loss: -0.3682153522968292\n"]},{"output_type":"stream","name":"stderr","text":["\r 70%|███████   | 70/100 [10:23<04:10,  8.35s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 69 | disc_loss: 0.35393959283828735 | gen_loss: -0.44396859407424927\n"]},{"output_type":"stream","name":"stderr","text":["\r 71%|███████   | 71/100 [10:33<04:18,  8.91s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 70 | disc_loss: -0.2747456729412079 | gen_loss: -0.2411070317029953\n"]},{"output_type":"stream","name":"stderr","text":["\r 72%|███████▏  | 72/100 [10:43<04:20,  9.31s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 71 | disc_loss: 3.1514997482299805 | gen_loss: -0.9112904667854309\n"]},{"output_type":"stream","name":"stderr","text":["\r 73%|███████▎  | 73/100 [10:51<03:57,  8.80s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 72 | disc_loss: 0.0500967800617218 | gen_loss: -0.6652992963790894\n"]},{"output_type":"stream","name":"stderr","text":["\r 74%|███████▍  | 74/100 [10:59<03:44,  8.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 73 | disc_loss: 0.025918304920196533 | gen_loss: -0.439584344625473\n"]},{"output_type":"stream","name":"stderr","text":["\r 75%|███████▌  | 75/100 [11:07<03:33,  8.53s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 74 | disc_loss: 0.4406803846359253 | gen_loss: -0.6208829879760742\n"]},{"output_type":"stream","name":"stderr","text":["\r 76%|███████▌  | 76/100 [11:15<03:16,  8.18s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 75 | disc_loss: 0.020725205540657043 | gen_loss: -0.4331439435482025\n"]},{"output_type":"stream","name":"stderr","text":["\r 77%|███████▋  | 77/100 [11:23<03:09,  8.25s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 76 | disc_loss: 0.4198124408721924 | gen_loss: -0.7519230842590332\n"]},{"output_type":"stream","name":"stderr","text":["\r 78%|███████▊  | 78/100 [11:31<03:00,  8.20s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 77 | disc_loss: 0.5086972713470459 | gen_loss: -0.3386489152908325\n"]},{"output_type":"stream","name":"stderr","text":["\r 79%|███████▉  | 79/100 [11:41<03:04,  8.81s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 78 | disc_loss: 0.7655319571495056 | gen_loss: -0.39054280519485474\n"]},{"output_type":"stream","name":"stderr","text":["\r 80%|████████  | 80/100 [11:52<03:04,  9.23s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 79 | disc_loss: 0.28952935338020325 | gen_loss: -0.5958393812179565\n"]},{"output_type":"stream","name":"stderr","text":["\r 81%|████████  | 81/100 [12:00<02:50,  8.98s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 80 | disc_loss: 0.7199921011924744 | gen_loss: -0.3759375810623169\n"]},{"output_type":"stream","name":"stderr","text":["\r 82%|████████▏ | 82/100 [12:10<02:48,  9.35s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 81 | disc_loss: 0.9824203252792358 | gen_loss: -0.33721598982810974\n"]},{"output_type":"stream","name":"stderr","text":["\r 83%|████████▎ | 83/100 [12:18<02:28,  8.76s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 82 | disc_loss: 0.8178105354309082 | gen_loss: -0.4936428964138031\n"]},{"output_type":"stream","name":"stderr","text":["\r 84%|████████▍ | 84/100 [12:26<02:18,  8.63s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 83 | disc_loss: 0.18995356559753418 | gen_loss: -0.3066287040710449\n"]},{"output_type":"stream","name":"stderr","text":["\r 85%|████████▌ | 85/100 [12:36<02:16,  9.11s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 84 | disc_loss: 0.1873091161251068 | gen_loss: -0.5265293121337891\n"]},{"output_type":"stream","name":"stderr","text":["\r 86%|████████▌ | 86/100 [12:46<02:12,  9.44s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 85 | disc_loss: 0.2862280011177063 | gen_loss: -0.18146146833896637\n"]},{"output_type":"stream","name":"stderr","text":["\r 87%|████████▋ | 87/100 [12:57<02:05,  9.68s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 86 | disc_loss: 0.19345512986183167 | gen_loss: -0.21904459595680237\n"]},{"output_type":"stream","name":"stderr","text":["\r 88%|████████▊ | 88/100 [13:05<01:51,  9.32s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 87 | disc_loss: 0.49372386932373047 | gen_loss: -0.1621231883764267\n"]},{"output_type":"stream","name":"stderr","text":["\r 89%|████████▉ | 89/100 [13:15<01:45,  9.59s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 88 | disc_loss: 2.2402355670928955 | gen_loss: -0.6677690744400024\n"]},{"output_type":"stream","name":"stderr","text":["\r 90%|█████████ | 90/100 [13:26<01:37,  9.78s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 89 | disc_loss: 0.18651506304740906 | gen_loss: -0.6334336996078491\n"]},{"output_type":"stream","name":"stderr","text":["\r 91%|█████████ | 91/100 [13:33<01:21,  9.07s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 90 | disc_loss: 1.1598222255706787 | gen_loss: -0.43618226051330566\n"]},{"output_type":"stream","name":"stderr","text":["\r 92%|█████████▏| 92/100 [13:41<01:10,  8.87s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 91 | disc_loss: 0.46109962463378906 | gen_loss: -0.648318886756897\n"]},{"output_type":"stream","name":"stderr","text":["\r 93%|█████████▎| 93/100 [13:51<01:03,  9.09s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 92 | disc_loss: -0.15683558583259583 | gen_loss: -0.10392051190137863\n"]},{"output_type":"stream","name":"stderr","text":["\r 94%|█████████▍| 94/100 [13:59<00:52,  8.77s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 93 | disc_loss: 0.6176029443740845 | gen_loss: -0.43085578083992004\n"]},{"output_type":"stream","name":"stderr","text":["\r 95%|█████████▌| 95/100 [14:09<00:46,  9.21s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 94 | disc_loss: 0.2859024405479431 | gen_loss: -0.4766866862773895\n"]},{"output_type":"stream","name":"stderr","text":["\r 96%|█████████▌| 96/100 [14:19<00:38,  9.51s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 95 | disc_loss: 0.3619175851345062 | gen_loss: -0.49691346287727356\n"]},{"output_type":"stream","name":"stderr","text":["\r 97%|█████████▋| 97/100 [14:27<00:26,  8.88s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 96 | disc_loss: 0.2902061343193054 | gen_loss: -0.7329599857330322\n"]},{"output_type":"stream","name":"stderr","text":["\r 98%|█████████▊| 98/100 [14:37<00:18,  9.29s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 97 | disc_loss: 0.38823288679122925 | gen_loss: -0.5691432952880859\n"]},{"output_type":"stream","name":"stderr","text":["\r 99%|█████████▉| 99/100 [14:47<00:09,  9.57s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 98 | disc_loss: 0.6900103688240051 | gen_loss: -0.32233020663261414\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 100/100 [14:55<00:00,  8.95s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 99 | disc_loss: 0.16145473718643188 | gen_loss: -0.36303386092185974\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"code","source":["synth = RegularSynthesizer.load('dragan-trans.pkl')\n","synth_data = synth.sample(10000)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qe5PRTrwxp7g","executionInfo":{"status":"ok","timestamp":1729746075380,"user_tz":-480,"elapsed":323,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"1adb72bb-7909-4ff9-b5a0-72dbd6da466d"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["Synthetic data generation: 100%|██████████| 21/21 [00:00<00:00, 169.28it/s]\n"]}]},{"cell_type":"code","source":["synth_data.to_csv('synthetic_data_dragan.csv', index=False)"],"metadata":{"id":"KLSohY7xXPR1","executionInfo":{"status":"ok","timestamp":1729746083728,"user_tz":-480,"elapsed":885,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["syn=pd.read_csv('/content/drive/MyDrive/transcriptomics-data/synthetic_data_dragan.csv')\n","\n","\n","# Create a KDE plot for both datasets\n","sns.kdeplot(data['1posH'], shade=True, color=\"green\", label=\"real\")\n","sns.kdeplot(syn['1posH'], shade=True, color=\"red\", label=\"synthetic\")\n","\n","# Adding labels and a legend\n","plt.title('1posH')\n","plt.xlabel('Value')\n","plt.ylabel('Density')\n","plt.legend()\n","\n","# Show the plot\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":680},"id":"nUsliznVYQvQ","executionInfo":{"status":"ok","timestamp":1729746146796,"user_tz":-480,"elapsed":1601,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"a2220cf7-1d55-4a5b-a914-c1e80d7ef079"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-10-80aafcd4e7ae>:5: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(data['1posH'], shade=True, color=\"green\", label=\"real\")\n","<ipython-input-10-80aafcd4e7ae>:6: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(syn['1posH'], shade=True, color=\"red\", label=\"synthetic\")\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from scipy.stats import wasserstein_distance\n","distance = []\n","\n","for col in data.columns:\n","    distance = wasserstein_distance(data[col], syn[col])\n","    print(f\"Feature: {col} | Wasserstein Distance: {distance:.3f}\")\n","\n","average_wasserstein_distance = np.mean(distance)\n","print(f\"\\nAverage Wasserstein Distance: {average_wasserstein_distance:.3f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uIrMZ8ImYePU","executionInfo":{"status":"ok","timestamp":1729746153277,"user_tz":-480,"elapsed":548,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"2713bcb1-c961-4471-8da6-f2381698f432"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: Gene_symbol | Wasserstein Distance: 3094.879\n","Feature: NAME | Wasserstein Distance: 3019.432\n","Feature: Foldchange | Wasserstein Distance: 0.910\n","Feature: PValue | Wasserstein Distance: 0.138\n","Feature: FDR | Wasserstein Distance: 0.011\n","Feature: 1posH | Wasserstein Distance: 50.906\n","Feature: 2posH | Wasserstein Distance: 247.151\n","Feature: 3posH | Wasserstein Distance: 179.515\n","Feature: 4posH | Wasserstein Distance: 376.997\n","Feature: 5posH | Wasserstein Distance: 341.325\n","Feature: 6posH | Wasserstein Distance: 137.014\n","Feature: 1negH | Wasserstein Distance: 42.010\n","Feature: 2negH | Wasserstein Distance: 79.527\n","Feature: 3negH | Wasserstein Distance: 56.168\n","Feature: 4negH | Wasserstein Distance: 192.963\n","Feature: 5negH | Wasserstein Distance: 92.057\n","Feature: 6negH | Wasserstein Distance: 181.506\n","\n","Average Wasserstein Distance: 181.506\n"]}]},{"cell_type":"code","source":["from scipy.stats import ks_2samp\n","\n","stat=[]\n","for col in data.columns:\n","    stat, p_value = ks_2samp(data[col], syn[col])\n","    print(f\"Feature: {col} | KS Statistic: {stat:.3f} | p-value: {p_value}\")\n","\n","avg_stat = np.mean(stat)\n","print(f\"\\nAverage KS Statistic: {avg_stat:.8f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WCp8IGF5ag8I","executionInfo":{"status":"ok","timestamp":1729746159645,"user_tz":-480,"elapsed":469,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"33944c75-2437-4716-8bd4-0fc5889371a2"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: Gene_symbol | KS Statistic: 0.388 | p-value: 0.0\n","Feature: NAME | KS Statistic: 0.416 | p-value: 0.0\n","Feature: Foldchange | KS Statistic: 0.510 | p-value: 0.0\n","Feature: PValue | KS Statistic: 0.318 | p-value: 0.0\n","Feature: FDR | KS Statistic: 0.545 | p-value: 0.0\n","Feature: 1posH | KS Statistic: 0.493 | p-value: 0.0\n","Feature: 2posH | KS Statistic: 0.821 | p-value: 0.0\n","Feature: 3posH | KS Statistic: 0.691 | p-value: 0.0\n","Feature: 4posH | KS Statistic: 0.954 | p-value: 0.0\n","Feature: 5posH | KS Statistic: 0.909 | p-value: 0.0\n","Feature: 6posH | KS Statistic: 0.680 | p-value: 0.0\n","Feature: 1negH | KS Statistic: 0.351 | p-value: 0.0\n","Feature: 2negH | KS Statistic: 0.400 | p-value: 0.0\n","Feature: 3negH | KS Statistic: 0.452 | p-value: 0.0\n","Feature: 4negH | KS Statistic: 0.871 | p-value: 0.0\n","Feature: 5negH | KS Statistic: 0.602 | p-value: 0.0\n","Feature: 6negH | KS Statistic: 0.820 | p-value: 0.0\n","\n","Average KS Statistic: 0.82028571\n"]}]}]}