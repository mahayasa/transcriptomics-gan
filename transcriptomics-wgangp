{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-2ry5-FOwE3PBejU0ZnL50I4pITmSAdy","timestamp":1729743598628}],"mount_file_id":"1Qrvc3RnFZgjre3ZnRblo1EorTvLgQoTv","authorship_tag":"ABX9TyNDuGd0nZPril/ffpU6VMfq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"rggSwquPSJIn","executionInfo":{"status":"ok","timestamp":1729743945825,"user_tz":-480,"elapsed":5665,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"3c0ac93a-0ea7-461b-80a7-9678fb4839a2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Gene_symbol                        NAME  Foldchange    PValue       FDR  \\\n","0  0610007P14Rik  RIKEN cDNA 0610007P14 gene    1.096333  0.237007  0.999902   \n","1  0610009B22Rik  RIKEN cDNA 0610009B22 gene   -1.025547  0.740390  0.999902   \n","2  0610009L18Rik  RIKEN cDNA 0610009L18 gene   -1.021398  0.916932  0.999902   \n","3  0610009O20Rik  RIKEN cDNA 0610009O20 gene   -1.050696  0.427450  0.999902   \n","4  0610010B08Rik  RIKEN cDNA 0610010B08 gene   -1.221902  0.116814  0.999902   \n","\n","       1posH      2posH      3posH      4posH      5posH      6posH  \\\n","0  24.061225  22.944972  21.897173  19.840338  27.577471  21.312612   \n","1  12.942468  10.845574  11.913660  10.309783  12.922427  11.597676   \n","2   0.823612   0.564221   0.998351   1.258753   1.949193   0.979025   \n","3  40.533458  38.993914  36.273433  38.062279  34.941088  35.621433   \n","4  12.530663  28.211031  19.301460  31.229051  29.021317  24.475614   \n","\n","       1negH      2negH      3negH      4negH      5negH      6negH  \n","0  21.029999  24.146191  19.102242  20.951491  20.477456  19.736071  \n","1  12.474068  12.291472  12.133346  11.639717  11.900859  11.783808  \n","2   1.199430   1.310258   0.746667   0.440422   1.329705   1.662746  \n","3  39.461234  40.368439  39.946707  39.889625  39.292780  36.941877  \n","4  32.744429  43.612888  31.111143  22.398591  22.073102  24.796602  "],"text/html":["\n","  <div id=\"df-5a82db2a-01c9-4df6-8c63-8393967d8826\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gene_symbol</th>\n","      <th>NAME</th>\n","      <th>Foldchange</th>\n","      <th>PValue</th>\n","      <th>FDR</th>\n","      <th>1posH</th>\n","      <th>2posH</th>\n","      <th>3posH</th>\n","      <th>4posH</th>\n","      <th>5posH</th>\n","      <th>6posH</th>\n","      <th>1negH</th>\n","      <th>2negH</th>\n","      <th>3negH</th>\n","      <th>4negH</th>\n","      <th>5negH</th>\n","      <th>6negH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0610007P14Rik</td>\n","      <td>RIKEN cDNA 0610007P14 gene</td>\n","      <td>1.096333</td>\n","      <td>0.237007</td>\n","      <td>0.999902</td>\n","      <td>24.061225</td>\n","      <td>22.944972</td>\n","      <td>21.897173</td>\n","      <td>19.840338</td>\n","      <td>27.577471</td>\n","      <td>21.312612</td>\n","      <td>21.029999</td>\n","      <td>24.146191</td>\n","      <td>19.102242</td>\n","      <td>20.951491</td>\n","      <td>20.477456</td>\n","      <td>19.736071</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0610009B22Rik</td>\n","      <td>RIKEN cDNA 0610009B22 gene</td>\n","      <td>-1.025547</td>\n","      <td>0.740390</td>\n","      <td>0.999902</td>\n","      <td>12.942468</td>\n","      <td>10.845574</td>\n","      <td>11.913660</td>\n","      <td>10.309783</td>\n","      <td>12.922427</td>\n","      <td>11.597676</td>\n","      <td>12.474068</td>\n","      <td>12.291472</td>\n","      <td>12.133346</td>\n","      <td>11.639717</td>\n","      <td>11.900859</td>\n","      <td>11.783808</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0610009L18Rik</td>\n","      <td>RIKEN cDNA 0610009L18 gene</td>\n","      <td>-1.021398</td>\n","      <td>0.916932</td>\n","      <td>0.999902</td>\n","      <td>0.823612</td>\n","      <td>0.564221</td>\n","      <td>0.998351</td>\n","      <td>1.258753</td>\n","      <td>1.949193</td>\n","      <td>0.979025</td>\n","      <td>1.199430</td>\n","      <td>1.310258</td>\n","      <td>0.746667</td>\n","      <td>0.440422</td>\n","      <td>1.329705</td>\n","      <td>1.662746</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0610009O20Rik</td>\n","      <td>RIKEN cDNA 0610009O20 gene</td>\n","      <td>-1.050696</td>\n","      <td>0.427450</td>\n","      <td>0.999902</td>\n","      <td>40.533458</td>\n","      <td>38.993914</td>\n","      <td>36.273433</td>\n","      <td>38.062279</td>\n","      <td>34.941088</td>\n","      <td>35.621433</td>\n","      <td>39.461234</td>\n","      <td>40.368439</td>\n","      <td>39.946707</td>\n","      <td>39.889625</td>\n","      <td>39.292780</td>\n","      <td>36.941877</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0610010B08Rik</td>\n","      <td>RIKEN cDNA 0610010B08 gene</td>\n","      <td>-1.221902</td>\n","      <td>0.116814</td>\n","      <td>0.999902</td>\n","      <td>12.530663</td>\n","      <td>28.211031</td>\n","      <td>19.301460</td>\n","      <td>31.229051</td>\n","      <td>29.021317</td>\n","      <td>24.475614</td>\n","      <td>32.744429</td>\n","      <td>43.612888</td>\n","      <td>31.111143</td>\n","      <td>22.398591</td>\n","      <td>22.073102</td>\n","      <td>24.796602</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a82db2a-01c9-4df6-8c63-8393967d8826')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a82db2a-01c9-4df6-8c63-8393967d8826 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a82db2a-01c9-4df6-8c63-8393967d8826');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3ef5387e-3bc6-4ce6-a371-e68ffdf8a784\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3ef5387e-3bc6-4ce6-a371-e68ffdf8a784')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3ef5387e-3bc6-4ce6-a371-e68ffdf8a784 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 14673,\n  \"fields\": [\n    {\n      \"column\": \"Gene_symbol\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14673,\n        \"samples\": [\n          \"Gm16973\",\n          \"Atf7ip\",\n          \"Tmem108\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NAME\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14468,\n        \"samples\": [\n          \"solute carrier family 9 (sodium/hydrogen exchanger); member 1\",\n          \"TSC22 domain family; member 1\",\n          \"zinc finger protein 456\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Foldchange\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0907842402356065,\n        \"min\": -3.36017107485283,\n        \"max\": 15.8817763943658,\n        \"num_unique_values\": 14673,\n        \"samples\": [\n          -1.06285176324194,\n          -1.01490995523472,\n          -1.07199724801355\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PValue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.254403436496577,\n        \"min\": 5.76442201121674e-05,\n        \"max\": 0.999902145391918,\n        \"num_unique_values\": 14673,\n        \"samples\": [\n          0.599509191089402,\n          0.899545959353624,\n          0.494247635795288\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FDR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0057080769659918875,\n        \"min\": 0.527631350673426,\n        \"max\": 0.999902145391918,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.527631350673426,\n          0.821021870510087,\n          0.999902145391918\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"1posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 183.91203381128406,\n        \"min\": 0.0,\n        \"max\": 7711.94630615385,\n        \"num_unique_values\": 3443,\n        \"samples\": [\n          34.0622237490509,\n          55.5937848753939,\n          23.472931391833\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176.2009757777657,\n        \"min\": 0.0,\n        \"max\": 7045.92447987485,\n        \"num_unique_values\": 3337,\n        \"samples\": [\n          30.0917666925281,\n          175.597996887023,\n          88.3318734786919\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 170.00331561624068,\n        \"min\": 0.0,\n        \"max\": 6303.7902045965,\n        \"num_unique_values\": 3235,\n        \"samples\": [\n          264.296885353148,\n          122.86377495893,\n          127.855531796373\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"4posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.16448536027212,\n        \"min\": 0.0,\n        \"max\": 6823.75750773206,\n        \"num_unique_values\": 3424,\n        \"samples\": [\n          220.82116142096,\n          31.9483385009152,\n          30.3898829642852\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 190.11824925951706,\n        \"min\": 0.0,\n        \"max\": 11700.9330752438,\n        \"num_unique_values\": 2988,\n        \"samples\": [\n          3605.42941537404,\n          125.037118005443,\n          746.107745142179\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"6posH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191.0894706402726,\n        \"min\": 0.0,\n        \"max\": 7921.43845323588,\n        \"num_unique_values\": 3058,\n        \"samples\": [\n          114.470565659728,\n          3.01238330683496,\n          314.191578902886\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"1negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 184.25455266135054,\n        \"min\": 0.0,\n        \"max\": 6517.10083873827,\n        \"num_unique_values\": 4253,\n        \"samples\": [\n          3.79819379577397,\n          263.194839553474,\n          124.380851564766\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 178.73530537832124,\n        \"min\": 0.0,\n        \"max\": 7383.4935576013,\n        \"num_unique_values\": 3333,\n        \"samples\": [\n          28.5137196490037,\n          389.146760286293,\n          28.8256859471328\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 179.99596606259297,\n        \"min\": 0.0,\n        \"max\": 6251.53520118277,\n        \"num_unique_values\": 3408,\n        \"samples\": [\n          1.4933348411819,\n          105.466773158472,\n          382.169274772468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"4negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 185.05873651001278,\n        \"min\": 0.0,\n        \"max\": 6529.88128998685,\n        \"num_unique_values\": 3374,\n        \"samples\": [\n          153.329678698251,\n          70.5933112431011,\n          79.4646631907636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 188.20214857201827,\n        \"min\": 0.0,\n        \"max\": 7427.99759394779,\n        \"num_unique_values\": 3280,\n        \"samples\": [\n          360.28354661132,\n          228.709245311485,\n          198.857369978678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"6negH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 184.72089215597018,\n        \"min\": 0.0,\n        \"max\": 8920.70421288998,\n        \"num_unique_values\": 3068,\n        \"samples\": [\n          835.638270258317,\n          40.2673688497173,\n          150.586946703701\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","data=pd.read_csv('/content/drive/MyDrive/transcriptomics-data/detectable_genes.csv')\n","\n","data.head()"]},{"cell_type":"code","source":["numeric_columns = data.drop(columns=['Gene_symbol', 'NAME'])\n","\n","sns.kdeplot(data['1posH'], shade=True)\n","plt.title('KDE Plot of column_name')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":576},"id":"x2rkK2zkU2QK","executionInfo":{"status":"ok","timestamp":1729686448198,"user_tz":-480,"elapsed":746,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"c83d056d-ac65-403a-ceb6-3ab0ce10ea29"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-b83de77c58d7>:3: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(data['1posH'], shade=True)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","label_e=LabelEncoder()\n","data['Gene_symbol']=label_e.fit_transform(data['Gene_symbol'])\n","data['NAME']=label_e.fit_transform(data['NAME'])"],"metadata":{"id":"7VQZayWaT9iZ","executionInfo":{"status":"ok","timestamp":1729743946474,"user_tz":-480,"elapsed":652,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df_numerical_features = data.select_dtypes(exclude='object')\n","df_categorical_features = data.select_dtypes(include='object')\n","\n","num_cols = list(df_numerical_features)\n","cat_cols = list(df_categorical_features)"],"metadata":{"id":"B8ZOOgsJTpya","executionInfo":{"status":"ok","timestamp":1729743952752,"user_tz":-480,"elapsed":453,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["!pip install ydata-synthetic==1.1.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ns4xW40CUN4a","executionInfo":{"status":"ok","timestamp":1729743960752,"user_tz":-480,"elapsed":5378,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"7fc0462d-21f4-421a-a56e-61b365749255"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: ydata-synthetic==1.1.0 in /usr/local/lib/python3.10/dist-packages (1.1.0)\n","Requirement already satisfied: requests<2.29,>=2.24.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (2.28.2)\n","Requirement already satisfied: pandas==1.5.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.5.3)\n","Requirement already satisfied: numpy==1.23.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.23.5)\n","Requirement already satisfied: scikit-learn==1.2.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.2.2)\n","Requirement already satisfied: matplotlib==3.6.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (3.6.3)\n","Requirement already satisfied: tensorflow==2.11.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (2.11.0)\n","Requirement already satisfied: tensorflow-probability==0.19.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (0.19.0)\n","Requirement already satisfied: easydict==1.10 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.10)\n","Requirement already satisfied: pmlb==1.0.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (1.0.1.post3)\n","Requirement already satisfied: tqdm<5.0 in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (4.66.5)\n","Requirement already satisfied: typeguard==2.13.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (2.13.3)\n","Requirement already satisfied: pytest==6.2.* in /usr/local/lib/python3.10/dist-packages (from ydata-synthetic==1.1.0) (6.2.5)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (1.3.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (4.54.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (1.4.7)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (24.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (10.4.0)\n","Requirement already satisfied: pyparsing>=2.2.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (3.2.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib==3.6.*->ydata-synthetic==1.1.0) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas==1.5.*->ydata-synthetic==1.1.0) (2024.2)\n","Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.10/dist-packages (from pmlb==1.0.*->ydata-synthetic==1.1.0) (6.0.2)\n","Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (24.2.0)\n","Requirement already satisfied: iniconfig in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (2.0.0)\n","Requirement already satisfied: pluggy<2.0,>=0.12 in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (1.5.0)\n","Requirement already satisfied: py>=1.8.2 in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (1.11.0)\n","Requirement already satisfied: toml in /usr/local/lib/python3.10/dist-packages (from pytest==6.2.*->ydata-synthetic==1.1.0) (0.10.2)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.*->ydata-synthetic==1.1.0) (1.13.1)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.*->ydata-synthetic==1.1.0) (1.4.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.*->ydata-synthetic==1.1.0) (3.5.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.6.3)\n","Requirement already satisfied: flatbuffers>=2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (24.3.25)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.4.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.64.1)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.11.0)\n","Requirement already satisfied: keras<2.12,>=2.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.11.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (18.1.1)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.4.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.19.6)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (75.1.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.16.0)\n","Requirement already satisfied: tensorboard<2.12,>=2.11 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.11.2)\n","Requirement already satisfied: tensorflow-estimator<2.12,>=2.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.11.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.5.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (4.12.2)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.16.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.37.1)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from tensorflow-probability==0.19.0->ydata-synthetic==1.1.0) (4.4.2)\n","Requirement already satisfied: cloudpickle>=1.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow-probability==0.19.0->ydata-synthetic==1.1.0) (3.1.0)\n","Requirement already satisfied: dm-tree in /usr/local/lib/python3.10/dist-packages (from tensorflow-probability==0.19.0->ydata-synthetic==1.1.0) (0.1.8)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (3.10)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (1.26.20)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<2.29,>=2.24.0->ydata-synthetic==1.1.0) (2024.8.30)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.44.0)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (2.27.0)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.4.6)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.7)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.6.1)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.8.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.0.4)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (5.5.0)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.4.1)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (1.3.1)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.0.2)\n","Requirement already satisfied: pyasn1<0.7.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (0.6.1)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0->ydata-synthetic==1.1.0) (3.2.2)\n"]}]},{"cell_type":"code","source":["from ydata_synthetic.synthesizers.regular import RegularSynthesizer\n","from ydata_synthetic.synthesizers.regular import RegularSynthesizer\n","from ydata_synthetic.synthesizers import ModelParameters, TrainParameters\n","#Defining the training parameters\n","noise_dim = 128\n","dim = 128\n","batch_size = 500\n","\n","log_step = 100\n","epochs = 100\n","learning_rate = [5e-4, 3e-3]\n","beta_1 = 0.5\n","beta_2 = 0.9\n","models_dir = '../cache'\n","\n","gan_args = ModelParameters(batch_size=batch_size,\n","                           lr=learning_rate,\n","                           betas=(beta_1, beta_2),\n","                           noise_dim=noise_dim,\n","                           layers_dim=dim)\n","\n","train_args = TrainParameters(epochs=epochs,\n","                             sample_interval=log_step)\n","\n","synth = RegularSynthesizer(modelname='wgangp', model_parameters=gan_args, n_critic=2)\n","synth.fit(data, train_args, num_cols, cat_cols)\n","\n","synth.save('wgangp-trans.pkl')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZI2QeB4XGiV","executionInfo":{"status":"ok","timestamp":1729744466981,"user_tz":-480,"elapsed":497003,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"4d677e0f-98da-4782-f825-dccca3aa999f"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n","  warnings.warn(\n","  0%|          | 0/100 [00:00<?, ?it/s]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 0 | disc_loss: 0.06373768299818039 | gen_loss: -0.10273293405771255\n"]},{"output_type":"stream","name":"stderr","text":["  2%|▏         | 2/100 [00:29<23:32, 14.41s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 1 | disc_loss: 0.2265600711107254 | gen_loss: -0.04604950547218323\n"]},{"output_type":"stream","name":"stderr","text":["\r  3%|▎         | 3/100 [00:44<23:08, 14.31s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 2 | disc_loss: 0.01568644493818283 | gen_loss: -0.040172725915908813\n"]},{"output_type":"stream","name":"stderr","text":["\r  4%|▍         | 4/100 [00:51<18:13, 11.39s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 3 | disc_loss: -0.020454425364732742 | gen_loss: 0.03237226605415344\n"]},{"output_type":"stream","name":"stderr","text":["\r  5%|▌         | 5/100 [01:00<16:39, 10.52s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 4 | disc_loss: 0.2892095446586609 | gen_loss: 0.030121704563498497\n"]},{"output_type":"stream","name":"stderr","text":["\r  6%|▌         | 6/100 [01:05<13:38,  8.71s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 5 | disc_loss: 6.0446696281433105 | gen_loss: 0.02937471494078636\n"]},{"output_type":"stream","name":"stderr","text":["\r  7%|▋         | 7/100 [01:08<10:55,  7.04s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 6 | disc_loss: 0.22703944146633148 | gen_loss: -0.0016942062648013234\n"]},{"output_type":"stream","name":"stderr","text":["\r  8%|▊         | 8/100 [01:15<10:28,  6.84s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 7 | disc_loss: 8.319663047790527 | gen_loss: 0.029458168894052505\n"]},{"output_type":"stream","name":"stderr","text":["\r  9%|▉         | 9/100 [01:18<08:50,  5.83s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 8 | disc_loss: 0.06551980972290039 | gen_loss: 0.026338990777730942\n"]},{"output_type":"stream","name":"stderr","text":["\r 10%|█         | 10/100 [01:22<07:42,  5.14s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 9 | disc_loss: 0.06679731607437134 | gen_loss: -0.005196799524128437\n"]},{"output_type":"stream","name":"stderr","text":["\r 11%|█         | 11/100 [01:26<07:14,  4.88s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 10 | disc_loss: 0.6119617223739624 | gen_loss: -0.017294714227318764\n"]},{"output_type":"stream","name":"stderr","text":["\r 12%|█▏        | 12/100 [01:32<07:29,  5.11s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 11 | disc_loss: 1.7848573923110962 | gen_loss: 0.019442688673734665\n"]},{"output_type":"stream","name":"stderr","text":["\r 13%|█▎        | 13/100 [01:35<06:45,  4.66s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 12 | disc_loss: 1.3348199129104614 | gen_loss: 0.02161920815706253\n"]},{"output_type":"stream","name":"stderr","text":["\r 14%|█▍        | 14/100 [01:39<06:13,  4.35s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 13 | disc_loss: 0.5744207501411438 | gen_loss: 0.03783629089593887\n"]},{"output_type":"stream","name":"stderr","text":["\r 15%|█▌        | 15/100 [01:44<06:30,  4.59s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 14 | disc_loss: 3.724179744720459 | gen_loss: 0.01651935651898384\n"]},{"output_type":"stream","name":"stderr","text":["\r 16%|█▌        | 16/100 [01:49<06:28,  4.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 15 | disc_loss: 0.1158643513917923 | gen_loss: 0.03121090494096279\n"]},{"output_type":"stream","name":"stderr","text":["\r 17%|█▋        | 17/100 [01:53<05:58,  4.32s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 16 | disc_loss: 0.16477657854557037 | gen_loss: 0.07221630960702896\n"]},{"output_type":"stream","name":"stderr","text":["\r 18%|█▊        | 18/100 [01:56<05:36,  4.10s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 17 | disc_loss: 0.8162077069282532 | gen_loss: 0.05554719641804695\n"]},{"output_type":"stream","name":"stderr","text":["\r 19%|█▉        | 19/100 [02:02<06:24,  4.74s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 18 | disc_loss: 0.4587143063545227 | gen_loss: 0.03815405070781708\n"]},{"output_type":"stream","name":"stderr","text":["\r 20%|██        | 20/100 [02:06<05:56,  4.45s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 19 | disc_loss: 0.03260238096117973 | gen_loss: 0.027822725474834442\n"]},{"output_type":"stream","name":"stderr","text":["\r 21%|██        | 21/100 [02:10<05:31,  4.20s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 20 | disc_loss: -0.00411374494433403 | gen_loss: 0.06064264476299286\n"]},{"output_type":"stream","name":"stderr","text":["\r 22%|██▏       | 22/100 [02:15<05:41,  4.38s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 21 | disc_loss: 10.080810546875 | gen_loss: 0.05076519772410393\n"]},{"output_type":"stream","name":"stderr","text":["\r 23%|██▎       | 23/100 [02:20<06:03,  4.72s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 22 | disc_loss: 0.17525489628314972 | gen_loss: 0.02160552330315113\n"]},{"output_type":"stream","name":"stderr","text":["\r 24%|██▍       | 24/100 [02:24<05:33,  4.38s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 23 | disc_loss: 0.047134630382061005 | gen_loss: 0.04750150442123413\n"]},{"output_type":"stream","name":"stderr","text":["\r 25%|██▌       | 25/100 [02:27<05:13,  4.17s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 24 | disc_loss: 0.03775627911090851 | gen_loss: 0.0405697263777256\n"]},{"output_type":"stream","name":"stderr","text":["\r 26%|██▌       | 26/100 [02:34<06:01,  4.89s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 25 | disc_loss: 0.2001214176416397 | gen_loss: 0.048382095992565155\n"]},{"output_type":"stream","name":"stderr","text":["\r 27%|██▋       | 27/100 [02:41<06:36,  5.43s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 26 | disc_loss: 0.007034278474748135 | gen_loss: 0.02775799110531807\n"]},{"output_type":"stream","name":"stderr","text":["\r 28%|██▊       | 28/100 [02:44<05:52,  4.89s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 27 | disc_loss: 0.6340293884277344 | gen_loss: -0.31230875849723816\n"]},{"output_type":"stream","name":"stderr","text":["\r 29%|██▉       | 29/100 [02:49<05:37,  4.75s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 28 | disc_loss: -0.06927981227636337 | gen_loss: 0.06027333438396454\n"]},{"output_type":"stream","name":"stderr","text":["\r 30%|███       | 30/100 [02:55<06:04,  5.21s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 29 | disc_loss: 0.07367810606956482 | gen_loss: -0.1473616659641266\n"]},{"output_type":"stream","name":"stderr","text":["\r 31%|███       | 31/100 [02:59<05:26,  4.73s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 30 | disc_loss: -0.0652400553226471 | gen_loss: 0.10454777628183365\n"]},{"output_type":"stream","name":"stderr","text":["\r 32%|███▏      | 32/100 [03:02<04:59,  4.40s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 31 | disc_loss: 0.15770718455314636 | gen_loss: 0.060290273278951645\n"]},{"output_type":"stream","name":"stderr","text":["\r 33%|███▎      | 33/100 [03:07<04:55,  4.42s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 32 | disc_loss: 0.6729211807250977 | gen_loss: 0.024080462753772736\n"]},{"output_type":"stream","name":"stderr","text":["\r 34%|███▍      | 34/100 [03:12<05:13,  4.75s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 33 | disc_loss: 0.33630701899528503 | gen_loss: 0.023449743166565895\n"]},{"output_type":"stream","name":"stderr","text":["\r 35%|███▌      | 35/100 [03:16<04:46,  4.41s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 34 | disc_loss: 0.047021713107824326 | gen_loss: 0.10635019093751907\n"]},{"output_type":"stream","name":"stderr","text":["\r 36%|███▌      | 36/100 [03:19<04:26,  4.16s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 35 | disc_loss: 0.047446489334106445 | gen_loss: 0.06270784139633179\n"]},{"output_type":"stream","name":"stderr","text":["\r 37%|███▋      | 37/100 [03:25<04:43,  4.50s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 36 | disc_loss: 0.010581599548459053 | gen_loss: 0.06847069412469864\n"]},{"output_type":"stream","name":"stderr","text":["\r 38%|███▊      | 38/100 [03:29<04:42,  4.56s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 37 | disc_loss: 0.054253265261650085 | gen_loss: 0.0482761412858963\n"]},{"output_type":"stream","name":"stderr","text":["\r 39%|███▉      | 39/100 [03:33<04:20,  4.28s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 38 | disc_loss: 0.05641624331474304 | gen_loss: 0.04246088117361069\n"]},{"output_type":"stream","name":"stderr","text":["\r 40%|████      | 40/100 [03:37<04:04,  4.08s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 39 | disc_loss: 0.2795001268386841 | gen_loss: 0.03174140676856041\n"]},{"output_type":"stream","name":"stderr","text":["\r 41%|████      | 41/100 [03:43<04:40,  4.75s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 40 | disc_loss: 0.028540946543216705 | gen_loss: 0.018252255395054817\n"]},{"output_type":"stream","name":"stderr","text":["\r 42%|████▏     | 42/100 [03:47<04:18,  4.45s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 41 | disc_loss: 0.028177954256534576 | gen_loss: 0.02724328637123108\n"]},{"output_type":"stream","name":"stderr","text":["\r 43%|████▎     | 43/100 [03:50<03:58,  4.19s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 42 | disc_loss: 0.00027831734041683376 | gen_loss: 0.03018188662827015\n"]},{"output_type":"stream","name":"stderr","text":["\r 44%|████▍     | 44/100 [03:54<03:53,  4.18s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 43 | disc_loss: 0.0889604240655899 | gen_loss: 0.016530396416783333\n"]},{"output_type":"stream","name":"stderr","text":["\r 45%|████▌     | 45/100 [04:00<04:16,  4.66s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 44 | disc_loss: -0.0013849842362105846 | gen_loss: 0.029620401561260223\n"]},{"output_type":"stream","name":"stderr","text":["\r 46%|████▌     | 46/100 [04:04<03:54,  4.34s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 45 | disc_loss: -0.003111819736659527 | gen_loss: 0.041307587176561356\n"]},{"output_type":"stream","name":"stderr","text":["\r 47%|████▋     | 47/100 [04:07<03:38,  4.12s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 46 | disc_loss: 0.006226132623851299 | gen_loss: 0.016678744927048683\n"]},{"output_type":"stream","name":"stderr","text":["\r 48%|████▊     | 48/100 [04:12<03:47,  4.37s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 47 | disc_loss: 0.20666003227233887 | gen_loss: 0.031151466071605682\n"]},{"output_type":"stream","name":"stderr","text":["\r 49%|████▉     | 49/100 [04:17<03:53,  4.58s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 48 | disc_loss: 2.2562685012817383 | gen_loss: 0.02986699901521206\n"]},{"output_type":"stream","name":"stderr","text":["\r 50%|█████     | 50/100 [04:21<03:34,  4.28s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 49 | disc_loss: 0.016028542071580887 | gen_loss: 0.030084870755672455\n"]},{"output_type":"stream","name":"stderr","text":["\r 51%|█████     | 51/100 [04:25<03:19,  4.07s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 50 | disc_loss: 0.17203092575073242 | gen_loss: 0.036683280020952225\n"]},{"output_type":"stream","name":"stderr","text":["\r 52%|█████▏    | 52/100 [04:31<03:41,  4.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 51 | disc_loss: -0.0010365654015913606 | gen_loss: 0.030699536204338074\n"]},{"output_type":"stream","name":"stderr","text":["\r 53%|█████▎    | 53/100 [04:35<03:36,  4.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 52 | disc_loss: 0.05372266843914986 | gen_loss: 0.03278026729822159\n"]},{"output_type":"stream","name":"stderr","text":["\r 54%|█████▍    | 54/100 [04:39<03:22,  4.41s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 53 | disc_loss: 0.5764449834823608 | gen_loss: 0.034003935754299164\n"]},{"output_type":"stream","name":"stderr","text":["\r 55%|█████▌    | 55/100 [04:43<03:17,  4.38s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 54 | disc_loss: 0.0034011658281087875 | gen_loss: 0.011669563129544258\n"]},{"output_type":"stream","name":"stderr","text":["\r 56%|█████▌    | 56/100 [04:49<03:25,  4.67s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 55 | disc_loss: 0.1082414835691452 | gen_loss: 0.04735199362039566\n"]},{"output_type":"stream","name":"stderr","text":["\r 57%|█████▋    | 57/100 [04:52<03:06,  4.34s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 56 | disc_loss: 0.020260972902178764 | gen_loss: 0.018655965104699135\n"]},{"output_type":"stream","name":"stderr","text":["\r 58%|█████▊    | 58/100 [04:56<02:53,  4.14s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 57 | disc_loss: 0.011339670047163963 | gen_loss: 0.026913484558463097\n"]},{"output_type":"stream","name":"stderr","text":["\r 59%|█████▉    | 59/100 [05:01<03:05,  4.52s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 58 | disc_loss: -0.00658697634935379 | gen_loss: 0.03099789284169674\n"]},{"output_type":"stream","name":"stderr","text":["\r 60%|██████    | 60/100 [05:06<03:00,  4.50s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 59 | disc_loss: 0.5335276126861572 | gen_loss: 0.028957964852452278\n"]},{"output_type":"stream","name":"stderr","text":["\r 61%|██████    | 61/100 [05:09<02:45,  4.24s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 60 | disc_loss: 0.01706731878221035 | gen_loss: 0.012530558742582798\n"]},{"output_type":"stream","name":"stderr","text":["\r 62%|██████▏   | 62/100 [05:13<02:33,  4.05s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 61 | disc_loss: 0.00878481287509203 | gen_loss: 0.039200492203235626\n"]},{"output_type":"stream","name":"stderr","text":["\r 63%|██████▎   | 63/100 [05:19<02:55,  4.75s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 62 | disc_loss: 0.010159374214708805 | gen_loss: 0.026916326954960823\n"]},{"output_type":"stream","name":"stderr","text":["\r 64%|██████▍   | 64/100 [05:23<02:38,  4.40s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 63 | disc_loss: 0.05881565436720848 | gen_loss: 0.01812262088060379\n"]},{"output_type":"stream","name":"stderr","text":["\r 65%|██████▌   | 65/100 [05:27<02:25,  4.16s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 64 | disc_loss: -0.000861836364492774 | gen_loss: 0.03513830900192261\n"]},{"output_type":"stream","name":"stderr","text":["\r 66%|██████▌   | 66/100 [05:31<02:22,  4.19s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 65 | disc_loss: 0.008575739338994026 | gen_loss: 0.028889073058962822\n"]},{"output_type":"stream","name":"stderr","text":["\r 67%|██████▋   | 67/100 [05:37<02:32,  4.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 66 | disc_loss: 0.007709577679634094 | gen_loss: 0.022428035736083984\n"]},{"output_type":"stream","name":"stderr","text":["\r 68%|██████▊   | 68/100 [05:40<02:18,  4.32s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 67 | disc_loss: 0.004090834408998489 | gen_loss: 0.03621741384267807\n"]},{"output_type":"stream","name":"stderr","text":["\r 69%|██████▉   | 69/100 [05:44<02:06,  4.09s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 68 | disc_loss: -0.0015661930665373802 | gen_loss: 0.036463212221860886\n"]},{"output_type":"stream","name":"stderr","text":["\r 70%|███████   | 70/100 [05:49<02:13,  4.43s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 69 | disc_loss: 0.060744866728782654 | gen_loss: -0.010322467423975468\n"]},{"output_type":"stream","name":"stderr","text":["\r 71%|███████   | 71/100 [05:54<02:11,  4.52s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 70 | disc_loss: 0.34587469696998596 | gen_loss: 0.04499334469437599\n"]},{"output_type":"stream","name":"stderr","text":["\r 72%|███████▏  | 72/100 [05:57<01:58,  4.24s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 71 | disc_loss: 0.01887168549001217 | gen_loss: 0.026828216388821602\n"]},{"output_type":"stream","name":"stderr","text":["\r 73%|███████▎  | 73/100 [06:01<01:49,  4.06s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 72 | disc_loss: 0.6546710729598999 | gen_loss: 0.03500865399837494\n"]},{"output_type":"stream","name":"stderr","text":["\r 74%|███████▍  | 74/100 [06:07<02:01,  4.69s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 73 | disc_loss: 0.023444276303052902 | gen_loss: 0.04535621032118797\n"]},{"output_type":"stream","name":"stderr","text":["\r 75%|███████▌  | 75/100 [06:11<01:50,  4.41s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 74 | disc_loss: 0.024325214326381683 | gen_loss: 0.007129549980163574\n"]},{"output_type":"stream","name":"stderr","text":["\r 76%|███████▌  | 76/100 [06:14<01:39,  4.16s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 75 | disc_loss: 0.012680585496127605 | gen_loss: 0.04749022051692009\n"]},{"output_type":"stream","name":"stderr","text":["\r 77%|███████▋  | 77/100 [06:18<01:35,  4.16s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 76 | disc_loss: 0.35448572039604187 | gen_loss: 0.0400489941239357\n"]},{"output_type":"stream","name":"stderr","text":["\r 78%|███████▊  | 78/100 [06:25<01:47,  4.88s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 77 | disc_loss: 0.03856317698955536 | gen_loss: 0.014205497689545155\n"]},{"output_type":"stream","name":"stderr","text":["\r 79%|███████▉  | 79/100 [06:29<01:34,  4.50s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 78 | disc_loss: 0.03947627171874046 | gen_loss: 0.00634834636002779\n"]},{"output_type":"stream","name":"stderr","text":["\r 80%|████████  | 80/100 [06:32<01:24,  4.22s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 79 | disc_loss: 0.0019355753902345896 | gen_loss: 0.03724632412195206\n"]},{"output_type":"stream","name":"stderr","text":["\r 81%|████████  | 81/100 [06:38<01:28,  4.63s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 80 | disc_loss: 0.14590448141098022 | gen_loss: 0.03830360993742943\n"]},{"output_type":"stream","name":"stderr","text":["\r 82%|████████▏ | 82/100 [06:42<01:21,  4.53s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 81 | disc_loss: -0.0003941054455935955 | gen_loss: 0.03297838196158409\n"]},{"output_type":"stream","name":"stderr","text":["\r 83%|████████▎ | 83/100 [06:46<01:12,  4.25s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 82 | disc_loss: 0.13170653581619263 | gen_loss: 0.04121354594826698\n"]},{"output_type":"stream","name":"stderr","text":["\r 84%|████████▍ | 84/100 [06:49<01:05,  4.08s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 83 | disc_loss: 0.0010589741868898273 | gen_loss: 0.04863414168357849\n"]},{"output_type":"stream","name":"stderr","text":["\r 85%|████████▌ | 85/100 [06:56<01:13,  4.91s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 84 | disc_loss: 0.00887252762913704 | gen_loss: 0.04233763739466667\n"]},{"output_type":"stream","name":"stderr","text":["\r 86%|████████▌ | 86/100 [07:02<01:11,  5.11s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 85 | disc_loss: 0.0019146903650835156 | gen_loss: 0.03522997349500656\n"]},{"output_type":"stream","name":"stderr","text":["\r 87%|████████▋ | 87/100 [07:05<01:00,  4.65s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 86 | disc_loss: 0.18902984261512756 | gen_loss: 0.04812038689851761\n"]},{"output_type":"stream","name":"stderr","text":["\r 88%|████████▊ | 88/100 [07:10<00:55,  4.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 87 | disc_loss: 0.01739879697561264 | gen_loss: 0.024452699348330498\n"]},{"output_type":"stream","name":"stderr","text":["\r 89%|████████▉ | 89/100 [07:15<00:53,  4.85s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 88 | disc_loss: -0.003314471337944269 | gen_loss: 0.028036635369062424\n"]},{"output_type":"stream","name":"stderr","text":["\r 90%|█████████ | 90/100 [07:19<00:44,  4.48s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 89 | disc_loss: 0.07403221726417542 | gen_loss: 0.018475905060768127\n"]},{"output_type":"stream","name":"stderr","text":["\r 91%|█████████ | 91/100 [07:23<00:37,  4.21s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 90 | disc_loss: 0.017969626933336258 | gen_loss: 0.005595661234110594\n"]},{"output_type":"stream","name":"stderr","text":["\r 92%|█████████▏| 92/100 [07:28<00:36,  4.58s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 91 | disc_loss: 1.9340482950210571 | gen_loss: 0.020496336743235588\n"]},{"output_type":"stream","name":"stderr","text":["\r 93%|█████████▎| 93/100 [07:33<00:31,  4.56s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 92 | disc_loss: 0.07807283848524094 | gen_loss: -0.03856690227985382\n"]},{"output_type":"stream","name":"stderr","text":["\r 94%|█████████▍| 94/100 [07:36<00:25,  4.28s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 93 | disc_loss: 0.14648674428462982 | gen_loss: 0.05632494390010834\n"]},{"output_type":"stream","name":"stderr","text":["\r 95%|█████████▌| 95/100 [07:40<00:20,  4.08s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 94 | disc_loss: 0.004474570509046316 | gen_loss: 0.03837212175130844\n"]},{"output_type":"stream","name":"stderr","text":["\r 96%|█████████▌| 96/100 [07:46<00:19,  4.76s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 95 | disc_loss: 0.01276379730552435 | gen_loss: 0.045907747000455856\n"]},{"output_type":"stream","name":"stderr","text":["\r 97%|█████████▋| 97/100 [07:50<00:13,  4.42s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 96 | disc_loss: 0.048741407692432404 | gen_loss: 0.022747643291950226\n"]},{"output_type":"stream","name":"stderr","text":["\r 98%|█████████▊| 98/100 [07:53<00:08,  4.16s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 97 | disc_loss: 0.005295870825648308 | gen_loss: 0.021883495151996613\n"]},{"output_type":"stream","name":"stderr","text":["\r 99%|█████████▉| 99/100 [07:58<00:04,  4.20s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 98 | disc_loss: 0.04833882302045822 | gen_loss: 0.012161718681454659\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 100/100 [08:03<00:00,  4.84s/it]"]},{"output_type":"stream","name":"stdout","text":["Epoch: 99 | disc_loss: -0.007077028043568134 | gen_loss: 0.032508376985788345\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"code","source":["synth = RegularSynthesizer.load('wgangp-trans.pkl')\n","synth_data = synth.sample(10000)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qe5PRTrwxp7g","executionInfo":{"status":"ok","timestamp":1729744470705,"user_tz":-480,"elapsed":482,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"a124966d-cb99-4922-fc44-b9a5c0a82e6f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stderr","text":["Synthetic data generation: 100%|██████████| 21/21 [00:00<00:00, 83.50it/s]\n"]}]},{"cell_type":"code","source":["synth_data.to_csv('synthetic_data_wgangp.csv', index=False)"],"metadata":{"id":"KLSohY7xXPR1","executionInfo":{"status":"ok","timestamp":1729744473654,"user_tz":-480,"elapsed":445,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["syn=pd.read_csv('/content/drive/MyDrive/transcriptomics-data/synthetic_data_wgangp.csv')\n","\n","\n","# Create a KDE plot for both datasets\n","sns.kdeplot(data['1posH'], shade=True, color=\"green\", label=\"real\")\n","sns.kdeplot(syn['1posH'], shade=True, color=\"red\", label=\"synthetic\")\n","\n","# Adding labels and a legend\n","plt.title('1posH')\n","plt.xlabel('Value')\n","plt.ylabel('Density')\n","plt.legend()\n","\n","# Show the plot\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":680},"id":"nUsliznVYQvQ","executionInfo":{"status":"ok","timestamp":1729744605876,"user_tz":-480,"elapsed":1468,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"6db7b559-1107-48a5-b0f0-1eb4a58177cf"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-8-64b355eba818>:5: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(data['1posH'], shade=True, color=\"green\", label=\"real\")\n","<ipython-input-8-64b355eba818>:6: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(syn['1posH'], shade=True, color=\"red\", label=\"synthetic\")\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from scipy.stats import wasserstein_distance\n","distance = []\n","\n","for col in data.columns:\n","    distance = wasserstein_distance(data[col], syn[col])\n","    print(f\"Feature: {col} | Wasserstein Distance: {distance:.3f}\")\n","\n","average_wasserstein_distance = np.mean(distance)\n","print(f\"\\nAverage Wasserstein Distance: {average_wasserstein_distance:.3f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uIrMZ8ImYePU","executionInfo":{"status":"ok","timestamp":1729744637242,"user_tz":-480,"elapsed":928,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"20c4d01c-3c3d-423e-edc0-e8f73410c5ad"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: Gene_symbol | Wasserstein Distance: 3323.366\n","Feature: NAME | Wasserstein Distance: 3105.507\n","Feature: Foldchange | Wasserstein Distance: 3.496\n","Feature: PValue | Wasserstein Distance: 0.254\n","Feature: FDR | Wasserstein Distance: 0.057\n","Feature: 1posH | Wasserstein Distance: 1253.868\n","Feature: 2posH | Wasserstein Distance: 1173.902\n","Feature: 3posH | Wasserstein Distance: 177.176\n","Feature: 4posH | Wasserstein Distance: 356.571\n","Feature: 5posH | Wasserstein Distance: 1306.087\n","Feature: 6posH | Wasserstein Distance: 155.203\n","Feature: 1negH | Wasserstein Distance: 121.219\n","Feature: 2negH | Wasserstein Distance: 715.750\n","Feature: 3negH | Wasserstein Distance: 741.934\n","Feature: 4negH | Wasserstein Distance: 247.187\n","Feature: 5negH | Wasserstein Distance: 343.882\n","Feature: 6negH | Wasserstein Distance: 460.641\n","\n","Average Wasserstein Distance: 460.641\n"]}]},{"cell_type":"code","source":["from scipy.stats import ks_2samp\n","\n","stat=[]\n","for col in data.columns:\n","    stat, p_value = ks_2samp(data[col], syn[col])\n","    print(f\"Feature: {col} | KS Statistic: {stat:.3f} | p-value: {p_value}\")\n","\n","avg_stat = np.mean(stat)\n","print(f\"\\nAverage KS Statistic: {avg_stat:.8f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WCp8IGF5ag8I","executionInfo":{"status":"ok","timestamp":1729744641321,"user_tz":-480,"elapsed":458,"user":{"displayName":"mahayasa adiputra","userId":"06368761074860067181"}},"outputId":"60e293a9-d7ab-46d9-f0b2-c2bc5121517f"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: Gene_symbol | KS Statistic: 0.467 | p-value: 0.0\n","Feature: NAME | KS Statistic: 0.397 | p-value: 0.0\n","Feature: Foldchange | KS Statistic: 0.994 | p-value: 0.0\n","Feature: PValue | KS Statistic: 0.630 | p-value: 0.0\n","Feature: FDR | KS Statistic: 0.914 | p-value: 0.0\n","Feature: 1posH | KS Statistic: 1.000 | p-value: 0.0\n","Feature: 2posH | KS Statistic: 0.965 | p-value: 0.0\n","Feature: 3posH | KS Statistic: 0.708 | p-value: 0.0\n","Feature: 4posH | KS Statistic: 0.930 | p-value: 0.0\n","Feature: 5posH | KS Statistic: 0.998 | p-value: 0.0\n","Feature: 6posH | KS Statistic: 0.482 | p-value: 0.0\n","Feature: 1negH | KS Statistic: 0.436 | p-value: 0.0\n","Feature: 2negH | KS Statistic: 1.000 | p-value: 0.0\n","Feature: 3negH | KS Statistic: 0.961 | p-value: 0.0\n","Feature: 4negH | KS Statistic: 0.782 | p-value: 0.0\n","Feature: 5negH | KS Statistic: 0.870 | p-value: 0.0\n","Feature: 6negH | KS Statistic: 0.668 | p-value: 0.0\n","\n","Average KS Statistic: 0.66780559\n"]}]}]}